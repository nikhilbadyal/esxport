name: Auto Tag on Version Bump

on:
  push:
    branches: [main]
    paths:
      - 'esxport/__init__.py'
      - 'pyproject.toml'

jobs:
  auto-tag:
    if: contains(github.event.head_commit.message, '⬆️ Bump to')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5.6.0
        with:
          python-version: '3.x'

      - name: Extract version from __init__.py
        id: get_version
        run: |
          VERSION=$(python -c "import esxport; print(esxport.__version__)")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          if git rev-parse --verify "refs/tags/v${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create and push tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## Release v${{ steps.get_version.outputs.version }}

            ### Changes
            - Updated to Elasticsearch ${{ steps.get_version.outputs.version }}
            - Compatibility verified with latest Elasticsearch features

            ### Installation
            ```bash
            pip install esxport==${{ steps.get_version.outputs.version }}
            ```

            ### Full Changelog
            See the [commit history](https://github.com/${{ github.repository }}/commits/v${{ steps.get_version.outputs.version }}) for detailed changes.
          draft: false
          prerelease: false
