name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements.dev.txt

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Run tests
        uses: pavelzw/pytest-action@v2.2.0

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.11'

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build hatch

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          pip install twine
          twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-pypi:
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://upload.pypi.org/legacy/

  publish-github:
    needs: [test, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Get tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Update release with assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          body: |
            ## Release ${{ steps.tag.outputs.tag }}

            ### ðŸš€ What's New
            - Updated to Elasticsearch ${{ steps.tag.outputs.tag }}
            - Enhanced compatibility and performance improvements

            ### ðŸ“¦ Installation
            ```bash
            pip install esxport==${{ steps.tag.outputs.tag }}
            ```

            ### ðŸ“‹ Assets
            - **Wheel**: Universal wheel package for pip installation
            - **Source**: Source distribution for custom builds

            ### ðŸ”— Links
            - [PyPI Package](https://pypi.org/project/esxport/${{ steps.tag.outputs.tag }}/)
            - [Documentation](https://github.com/nikhilbadyal/esxport#readme)
            - [Changelog](https://github.com/nikhilbadyal/esxport/commits/${{ steps.tag.outputs.tag }})
          tag_name: ${{ steps.tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
