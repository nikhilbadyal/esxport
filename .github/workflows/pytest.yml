name: Unit Pytest & Sonar Analysis
on:
  pull_request:
    branches: [main]
  workflow_dispatch:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  tests:
    name: >-
      Pytest - Python ${{ matrix.PYTHON_VERSION }}
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { PYTHON_VERSION: '3.10' }
          - { PYTHON_VERSION: '3.11' }
          - { PYTHON_VERSION: '3.12', GENERATE_COVERAGE: 'true' }
          - { PYTHON_VERSION: '3.13' }
          - { PYTHON_VERSION: '3.14' }
    steps:
      - name: "Checkout to repository"
        uses: actions/checkout@v4.2.2

      - name: "Setup Python"
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
          cache: 'pip'
          allow-prereleases: true

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install Requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements.dev.txt

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: "Run tests"
        uses: pavelzw/pytest-action@v2.2.0

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Test reporter
        uses: phoenix-actions/test-reporting@v15
        if: always()
        with:
          name: EsXport tests for (Python ${{ matrix.PYTHON_VERSION }})
          path: junit.xml
          reporter: java-junit
          output-to: step-summary
          only-summary: true
          max-annotations: 0

      - name: Upload coverage report for SonarQube
        if: matrix.GENERATE_COVERAGE == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 1

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: tests
    if: always()
    steps:
      - name: "Checkout to repository"
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
